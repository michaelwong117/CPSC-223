#!/bin/bash
make
./Q3 > student_out
printf "First drawn card: AC\nDrawn cards: AC 2C 3C 4C 5C \nRemaining cards in the deck: 6C 7C 8C 9C TC JC QC KC AD 2D 3D 4D 5D 6D 7D 8D 9D TD JD QD KD AH 2H 3H 4H 5H 6H 7H 8H 9H TH JH QH KH AS 2S 3S 4S 5S 6S 7S 8S 9S TS JS QS KS\nThe requested number of cards to be drawn exceeded the number of cards in the deck\n" > expected_out
echo "README: To get more information on each test, see the comments in main."
echo "README: False positives and negatives are possible under this script"
echo "README: because readability of the source file was prioritized over comprehensiveness."
echo "README: Grading will be completed in a far more exhaustive manner."
DIFF=$(diff <(head -n 1 student_out) <(head -n 1 expected_out))
if [ "$DIFF" != "" ]
then
	echo "TEST 1 FAIL (pointer permanence)"
else
	echo "TEST 1 PASS (pointer permanence)"
fi

DIFF=$(diff <(sed '2q;d' student_out) <(sed '2q;d' expected_out))
if [ "$DIFF" != "" ]
then
	echo "TEST 2 FAIL (printing five freshly drawn cards to stdout)"
else
	echo "TEST 2 PASS (printing five freshly drawn cards to stdout)"
fi

DIFF=$(diff <(sed '3q;d' student_out) <(sed '3q;d' expected_out))
if [ "$DIFF" != "" ]
then
	echo "TEST 3 FAIL (printing remaining cards in the deck)"
else
	echo "TEST 3 PASS (printing remaining cards in the deck)"
fi

DIFF=$(diff <(sed '3q;d' student_out) <(sed '3q;d' expected_out))
if [ "$DIFF" != "" ]
then
	echo "TEST 4 FAIL (requesting more cards than are in the deck)"
else
	echo "TEST 4 PASS (requesting more cards than are in the deck)"
fi